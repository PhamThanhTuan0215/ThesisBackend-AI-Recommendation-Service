import requests
import os
import json
from dotenv import load_dotenv
load_dotenv()

API_KEY = os.getenv("GEMINI_API_KEY")
MODEL = "gemini-2.0-flash"

url = f"https://generativelanguage.googleapis.com/v1beta/models/{MODEL}:generateContent"
headers = {
    "Content-Type": "application/json",
    "X-goog-api-key": API_KEY
}

user_input = "T√¥i ƒëang b·ªã ng·ª©a da v√† ƒëau b·ª•ng"
prompt = f"""
Ph√¢n t√≠ch c√¢u sau v√† tr√≠ch xu·∫•t danh s√°ch c√°c tri·ªáu ch·ª©ng c√≥ trong ƒë√≥.

Ch·ªâ tr·∫£ v·ªÅ k·∫øt qu·∫£ d∆∞·ªõi d·∫°ng m·∫£ng JSON thu·∫ßn t√∫y g·ªìm c√°c chu·ªói, v√≠ d·ª•:
["tri·ªáu ch·ª©ng 1", "tri·ªáu ch·ª©ng 2"]

Kh√¥ng c·∫ßn gi·∫£i th√≠ch g√¨ th√™m. Kh√¥ng in d·∫•u sao (*), kh√¥ng xu·ªëng d√≤ng.

C√¢u: "{user_input}"
"""

payload = {
    "contents": [
        {
            "parts": [
                {"text": prompt}
            ]
        }
    ]
}

response = requests.post(url, headers=headers, json=payload)

if response.status_code == 200:
    text = response.json()["candidates"][0]["content"]["parts"][0]["text"]
    print("üìÑ Raw text:", text)
    try:
        symptoms = json.loads(text)
        print("‚úÖ Danh s√°ch tri·ªáu ch·ª©ng:", symptoms)
    except Exception as e:
        print("‚ùå Kh√¥ng ph√¢n t√≠ch ƒë∆∞·ª£c JSON:", e)
else:
    print("‚ùå L·ªói:", response.status_code, response.text)
